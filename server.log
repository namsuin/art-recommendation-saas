
🔧 Environment Configuration:

⚠️  WARNINGS:
  - Replicate API not configured (REPLICATE_API_TOKEN missing)

✅ Basic configuration is valid

📋 Configured Services:
  - Supabase: ✅
  - Google Vision: ✅
  - Replicate: ⚠️
  - Clarifai: ✅
  - Stripe: ⚠️

🚀 AI Art Recommendation Server running at http://localhost:3000
📱 WebSocket endpoint: ws://localhost:3000
🎨 Frontend: http://localhost:3000
❤️  Health check: http://localhost:3000/api/health
🔐 Authentication: Login/Signup available
✅ Supabase connection successful
🔧 Creating new AI Analysis Service...
🚀 Initializing AI Analysis Service...
🔑 Initializing Google Vision with key file: /Users/suin2/art-recommendation-saas/cedar-gift-467808-f9-993fe64d0376.json
📂 Project ID: cedar-gift-467808-f9
✅ Google Vision AI initialized with service account
⚠️ Replicate API token not found
✅ Clarifai API initialized
🔄 Initializing Local CLIP service...
🎯 AI Ensemble Service initialized
✅ AI Ensemble Service initialized
💊 Health check system initialized (30000ms interval)
🎯 AI Analysis Service created successfully
🔍 Upload limit calculation for user: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
  - subscription_tier: free
  - dailyLimit: 9999
  - upload_count_today: 50
  - remainingUploads: 9949
  - canUpload: true
  - resetTime: 2025-08-04T13:37:52.939Z
  - now: 2025-08-03T15:41:50.466Z
  - should reset: false
🚀 Initializing AI Analysis Service...
🔑 Initializing Google Vision with key file: /Users/suin2/art-recommendation-saas/cedar-gift-467808-f9-993fe64d0376.json
📂 Project ID: cedar-gift-467808-f9
✅ Google Vision AI initialized with service account
⚠️ Replicate API token not found
✅ Clarifai API initialized
🔄 Initializing Local CLIP service...
🎯 AI Ensemble Service initialized
✅ AI Ensemble Service initialized
💊 Health check system initialized (30000ms interval)
🎨 Artsonia API initialized - Limited mock implementation for student art
🎨 Artsonia API initialized - Limited mock implementation for student art
🚀 Starting multi-image analysis...
📋 User ID: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
📷 Found image: image0 - free-nature-images.jpg (200951 bytes)
📷 Found image: image1 - Free-Stock-Photos-01.jpg (249462 bytes)
🖼️ Total images found: 2
🔄 Converting images to buffers...
✅ Buffer conversion complete
🎯 Starting AI analysis...
🔍 Analyzing image 1/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
🔄 Running 5 services in parallel: google_vision, replicate, clarifai, local_clip, style_transfer
🔍 Image analysis completed in 3339ms
📈 Confidence boosted to 0.875
💾 Cached analysis result (1/500)
🚀 Optimized analysis completed in 3340ms
📊 Analysis complete. Found 27 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🏛️ Searching Met Museum for: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🔍 Found 7 potential artworks
Failed to get artwork 438821: AxiosError {
  originalLine: 408,
  originalColumn: 30,
  stack: "Error\n    at handleRequestTimeout (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:657:20)\n    at emit (node:events:92:22)\n    at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/follow-redirects/index.js:221:12)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "timeout of 5000ms exceeded",
  name: "AxiosError",
  code: "ECONNABORTED",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 5000,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    method: "get",
    url: "https://collectionapi.metmuseum.org/public/collection/v1/objects/438821",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: Writable {
    _events: {
      error: [
        [Function: handleRequestError]
      ],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [
        [Function: handleResponse]
      ],
      socket: [
        [Function: handleRequestSocket], [Function: destroyOnTimeout]
      ],
    },
    _writableState: {
      [Symbol(kState)]: 17580812,
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: onwrite],
      writelen: 0,
      [Symbol(kBufferedValue)]: null,
      bufferedIndex: 0,
      pendingcb: 0,
      objectMode: [Getter/Setter],
      finalCalled: [Getter/Setter],
      needDrain: [Getter/Setter],
      ending: [Getter/Setter],
      ended: [Getter/Setter],
      finished: [Getter/Setter],
      destroyed: [Getter/Setter],
      decodeStrings: [Getter/Setter],
      writing: [Getter/Setter],
      sync: [Getter/Setter],
      bufferProcessing: [Getter/Setter],
      constructed: [Getter/Setter],
      prefinished: [Getter/Setter],
      errorEmitted: [Getter/Setter],
      emitClose: [Getter/Setter],
      autoDestroy: [Getter/Setter],
      closed: [Getter/Setter],
      closeEmitted: [Getter/Setter],
      allBuffers: [Getter/Setter],
      allNoop: [Getter/Setter],
      errored: [Getter/Setter],
      writable: [Getter/Setter],
      defaultEncoding: [Getter/Setter],
      writecb: [Getter/Setter],
      afterWriteTickInfo: [Getter/Setter],
      buffered: [Getter/Setter],
      getBuffer: [Function: getBuffer],
      bufferedRequestCount: [Getter],
      [Symbol(kOnConstructed)]: [Function: onConstructed],
    },
    _maxListeners: undefined,
    [Symbol(kCapture)]: false,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/public/collection/v1/objects/438821",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "collectionapi.metmuseum.org",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/public/collection/v1/objects/438821",
    },
    _ended: true,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 0,
    _requestBodyBuffers: [],
    _eventsCount: NaN,
    _onNativeResponse: [Function],
    _currentRequest: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "collectionapi.metmuseum.org",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/public/collection/v1/objects/438821",
      _events: [Object ...],
      _eventsCount: 7,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Circular],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(fetchRequest)]: Promise { <pending> },
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _closed: false,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    _currentUrl: "https://collectionapi.metmuseum.org/public/collection/v1/objects/438821",
    _timeout: null,
    abort: [Function],
    destroy: [Function],
    write: [Function],
    end: [Function],
    setHeader: [Function],
    removeHeader: [Function],
    setTimeout: [Function],
    flushHeaders: [Function],
    getHeader: [Function],
    setNoDelay: [Function],
    setSocketKeepAlive: [Function],
    aborted: [Getter],
    connection: [Getter],
    socket: [Getter],
    _sanitizeOptions: [Function],
    _performRequest: [Function],
    _processResponse: [Function],
    pipe: [Function],
    cork: [Function],
    uncork: [Function],
    setDefaultEncoding: [Function: setDefaultEncoding],
    _write: [Function],
    _writev: null,
    closed: [Getter],
    destroyed: [Getter/Setter],
    writable: [Getter/Setter],
    writableFinished: [Getter],
    writableObjectMode: [Getter],
    writableBuffer: [Getter],
    writableEnded: [Getter],
    writableNeedDrain: [Getter],
    writableHighWaterMark: [Getter],
    writableCorked: [Getter],
    writableLength: [Getter],
    errored: [Getter],
    writableAborted: [Getter],
    _undestroy: [Function: undestroy],
    _destroy: [Function],
    [Symbol(nodejs.rejection)]: [Function],
    [Symbol(Symbol.asyncDispose)]: [Function],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
  },
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
🎨 Got 2 artworks from getArtworkDetails
📊 Ranked artworks: 2
🎯 First artwork: The Penitence of Saint Jerome by Joachim Patinir
✅ Retrieved 2 Met Museum artworks
🏛️ Found 2 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 4 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 10096ms
🔍 Analyzing image 2/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
🔄 Running 5 services in parallel: google_vision, replicate, clarifai, local_clip, style_transfer
🔍 Image analysis completed in 2026ms
📈 Confidence boosted to 0.875
💾 Cached analysis result (2/500)
🚀 Optimized analysis completed in 2027ms
📊 Analysis complete. Found 26 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🏛️ Searching Met Museum for: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🔍 Found 6 potential artworks
🎨 Got 4 artworks from getArtworkDetails
📊 Ranked artworks: 4
🎯 First artwork: Processional Cross by Northern Highlands artist
✅ Retrieved 4 Met Museum artworks
🏛️ Found 4 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 5 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 3743ms
📊 Found 20 common keywords
🏛️ Searching Met Museum for: nature, yellow, white, green, grass, natural landscape, grassland, plain, landscape, cloud
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass natural landscape grassland plain 산수화 cloud",
      numOfRows: 10,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "880", "date",
        "Sun, 03 Aug 2025 15:42:11 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "880",
      date: "Sun, 03 Aug 2025 15:42:11 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&amp;numOfRows=10&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Korean Cultural API search error: 85 |         }
86 |       });
87 | 
88 |       const apiData: CulturalApiResponse = response.data;
89 | 
90 |       if (apiData.response.header.resultCode !== '0000') {
                       ^
TypeError: undefined is not an object (evaluating 'apiData.response.header')
      at searchCulturalEvents (/Users/suin2/art-recommendation-saas/backend/services/korean-cultural-api.ts:90:19)

🔍 Found 20 potential artworks
Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass natural landscape grassland plain landscape cloud",
      ps: 10,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 15:42:13 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T154212Z-176b6b6df5f6kwbchC1SELzffs0000000cd0000000008xkw",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 15:42:13 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T154212Z-176b6b6df5f6kwbchC1SELzffs0000000cd0000000008xkw",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
🎨 Got 10 artworks from getArtworkDetails
📊 Ranked artworks: 10
🎯 First artwork: Landscapes, Figures, and Flowers by Chen Hongshou
✅ Retrieved 10 Met Museum artworks
met search failed: {
  status: "fulfilled",
  value: [
    {
      id: "met_44759",
      title: "Landscapes, Figures, and Flowers",
      artist: "Chen Hongshou",
      image_url: "https://images.metmuseum.org/CRDImages/as/original/1985_121_A_sf.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/as/web-large/1985_121_A_sf.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/44759",
      description: "Album of twelve leaves; ink and color on paper, dated 1618–22, from China, (Image: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm)\r\nInscription: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm))",
      keywords: [ "asian art", "album", "china", "ming dynasty (1368–1644)",
        "album of twelve leaves; ink and color on paper",
        "chinese", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437261",
      title: "The Penitence of Saint Jerome",
      artist: "Joachim Patinir",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT5549.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT5549.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437261",
      description: "Oil on wood, ca. 1515, (Shaped top: central panel, overall, with engaged frame, 46 1/4 x 32 in. (117.5 x 81.3 cm); each wing, overall, with engaged frame, 47 1/2 x 14 in. (120.7 x 35.6 cm))",
      keywords: [ "european paintings", "painting, triptych",
        "oil on wood", "netherlandish", "landscapes", "saint jerome",
        "saint john the baptist", "jesus", "baptism of christ"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438821",
      title: "Ia Orana Maria (Hail Mary)",
      artist: "Paul Gauguin",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1025.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1025.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438821",
      description: "Oil on canvas, 1891, (44 3/4 x 34 1/2 in. (113.7 x 87.6 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "women", "landscapes", "angels", "virgin mary", "jesus"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437010",
      title: "The Arrival in Bethlehem",
      artist: "Master of the Brussels Calling of Saint Matthew",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-20399-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-20399-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437010",
      description: "Oil on wood, ca. 1540–50, (26 1/2 x 36 7/8 in. (67.3 x 93.7 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "rivers", "landscapes", "saint joseph", "virgin mary",
        "jesus", "nativity"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436535",
      title: "Wheat Field with Cypresses",
      artist: "Vincent van Gogh",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1567.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1567.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436535",
      description: "Oil on canvas, 1889, (28 13/16 × 36 3/4 in. (73.2 × 93.4 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "dutch", "landscapes", "cypresses", "summer"
      ],
      metadata: [Object ...],
    }, {
      id: "met_435809",
      title: "The Harvesters",
      artist: "Pieter Bruegel the Elder",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP119115.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP119115.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/435809",
      description: "Oil on wood, 1565, (Overall, including added strips at top, bottom, and right, 46 7/8 x 63 3/4 in. (119 x 162 cm); original painted surface 45 7/8 x 62 7/8 in. (116.5 x 159.5 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "food", "men", "women", "landscapes", "working", "eating"
      ],
      metadata: [Object ...],
    }, {
      id: "met_895898",
      title: "View on the South Downs",
      artist: "John Martin",
      image_url: "https://images.metmuseum.org/CRDImages/dp/original/DP-28061-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/dp/web-large/DP-28061-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/895898",
      description: "Watercolor with reductive techniques, 1840–49, (Sheet: 9 1/2 in. × 13 in. (24.1 × 33 cm))",
      keywords: [ "drawings and prints", "drawing", "watercolor with reductive techniques",
        "british", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436101",
      title: "The Rest on the Flight into Egypt",
      artist: "Gerard David",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-14936-023.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-14936-023.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436101",
      description: "Oil on wood, ca. 1512–15, (21 in. × 15 11/16 in. (53.3 × 39.8 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "madonna and child", "virgin mary",
        "jesus", "nursing"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438816",
      title: "The Forest in Winter at Sunset",
      artist: "Théodore Rousseau",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-31520-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-31520-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438816",
      description: "Oil on canvas, ca. 1846–67, (64 x 102 3/8 in. (162.6 x 260 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "forests", "winter", "evening"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436282",
      title: "The Crucifixion; The Last Judgment",
      artist: "Jan van Eyck",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/LC-33_92ab-Primary_Temp.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/LC-33_92ab-Primary_Temp.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436282",
      description: "Oil on canvas, transferred from wood, ca. 1436–38, (Each 22 1/4 x 7 2/3 in. (56.5 x 19.7 cm))",
      keywords: [
        "european paintings", "painting, diptych",
        "oil on canvas, transferred from wood",
        "netherlandish", "skeletons", "men", "angels", "christ", "mary magdalene",
        "virgin mary", "crucifixion", "last judgement"
      ],
      metadata: [Object ...],
    }
  ],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
korean-cultural search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "undefined is not an object (evaluating 'apiData.response.header')",
  },
}
🎯 Calculating similarity for 20 artworks
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 nature - 섬유미술 프로젝트: 100% similarity
📊 nature - 금속공예 프로젝트: 100% similarity
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 The Beach of Les Grands Sables at Le Pouldu: 47% similarity
📊 Foliage—Oak Tree and Fruit Seller: 43% similarity
📊 The Marsh: 44% similarity
📊 Landscape: 47% similarity
📊 Haymaking at Éragny: 41% similarity
📊 Springtime: 46% similarity
📊 Pasture in Normandy: 44% similarity
📊 A Sunday on La Grande Jatte — 1884: 37% similarity
📊 Stacks of Wheat (End of Summer): 38% similarity
📊 The Starry Night: 55% similarity
Failed to save analysis results: {}
📊 Analysis result: SUCCESS
🌍 Searching expanded art sources...
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass",
      numOfRows: 5,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "811", "date",
        "Sun, 03 Aug 2025 15:42:15 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "811",
      date: "Sun, 03 Aug 2025 15:42:15 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass&amp;numOfRows=5&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass",
      ps: 5,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 15:42:15 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T154215Z-176b6b6df5f6kwbchC1SELzffs0000000cd0000000008xvm",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 15:42:15 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T154215Z-176b6b6df5f6kwbchC1SELzffs0000000cd0000000008xvm",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
📍 Art Institute of Chicago: Found 5 artworks
📍 Rijksmuseum: Found 0 artworks
📍 국립중앙박물관: Found 0 artworks
Failed to authenticate with Artsy API: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "User-Agent": "axios/1.11.0",
      "Content-Length": "89",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    method: "post",
    url: "https://api.artsy.net/api/tokens/xapp_token",
    data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
    allowAbsoluteUrls: true,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.artsy.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "POST",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/tokens/xapp_token",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "content-type": "application/json",
      "user-agent": "axios/1.11.0",
      "content-length": "89",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/tokens/xapp_token",
      method: "POST",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.artsy.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/tokens/xapp_token",
      _defaultAgent: [Object ...],
      host: "api.artsy.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 89,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.artsy.net/api/tokens/xapp_token",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(bodyChunks)]: [
      <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
    ],
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.artsy.net/api/tokens/xapp_token",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/tokens/xapp_token",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 15:42:16 GMT", "content-type", "application/json", "transfer-encoding",
        "chunked", "connection", "keep-alive", "vary", "Accept-Encoding, Accept-Encoding, Origin",
        "content-encoding", "gzip", "cache-control", "no-cache", "strict-transport-security",
        "max-age=15724800; includeSubDomains", "content-security-policy", "frame-ancestors https://*.artsy.net;",
        "x-frame-options", "SAMEORIGIN", "access-control-allow-methods", "GET, OPTIONS", "access-control-allow-headers",
        "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
        "access-control-expose-headers", "X-Total-Count", "CF-RAY", "9696ec86c902d48e-NRT",
        "x-request-id", "7f670eae58032915066e6a92c7c0204a", "x-runtime", "0.007514", "cf-cache-status",
        "DYNAMIC", "Server", "cloudflare"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.artsy.net/api/tokens/xapp_token",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 15:42:16 GMT",
      "content-type": "application/json",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      vary: "Accept-Encoding, Accept-Encoding, Origin",
      "cache-control": "no-cache",
      "strict-transport-security": "max-age=15724800; includeSubDomains",
      "content-security-policy": "frame-ancestors https://*.artsy.net;",
      "x-frame-options": "SAMEORIGIN",
      "access-control-allow-methods": "GET, OPTIONS",
      "access-control-allow-headers": "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
      "access-control-expose-headers": "X-Total-Count",
      "cf-ray": "9696ec86c902d48e-NRT",
      "x-request-id": "7f670eae58032915066e6a92c7c0204a",
      "x-runtime": "0.007514",
      "cf-cache-status": "DYNAMIC",
      server: "cloudflare",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      method: "post",
      url: "https://api.artsy.net/api/tokens/xapp_token",
      data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
      allowAbsoluteUrls: true,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.artsy.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "POST",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/tokens/xapp_token",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(bodyChunks)]: [
        <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
      ],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      type: "other_error",
      message: "Unauthorized",
    },
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Artsy API not available - returning empty results
Behance search failed: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 403",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      q: "nature yellow white green grass",
      client_id: "your-behance-api-key",
      field: "fine arts,illustration,digital art",
      sort: "appreciations",
      per_page: 5,
    },
    method: "get",
    url: "https://api.behance.net/v2/projects",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.behance.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.behance.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/v2/projects",
      search: "?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _defaultAgent: [Object ...],
      host: "api.behance.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
        status: 403,
        statusText: "Forbidden",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Forbidden",
      [Symbol(statusCode)]: 403,
      url: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      headers: [Object ...],
      rawHeaders: [
        "connection", "keep-alive", "content-type", "application/json; charset=utf-8", "strict-transport-security",
        "max-age=0", "x-xss-protection", "1; mode=block", "x-content-type-options", "nosniff",
        "content-encoding", "gzip", "accept-ranges", "bytes", "via", "1.1 varnish, 1.1 varnish",
        "date", "Sun, 03 Aug 2025 15:42:17 GMT", "cache-control", "no-store", "vary", "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
        "transfer-encoding", "chunked", "set-cookie", "gk_suid=84285814; max-age=31536000; secure; path=/; httponly",
        "set-cookie", "gki=ab_test_pro_upgrade_button_round_3:false,ab_test_susi_zero_susi_sign_in:false,; max-age=31536000; path=/; secure; httponly",
        "server", "adobe", "x-trace-id", "1dd9d51c-5675-46d9-950d-d44f84757f8e", "x-served-from",
        "Flex", "X-Last-60s-Hits", "1", "X-Served-By", "cache-iad-kiad7000032-IAD, cache-icn1450028-ICN",
        "X-Cache", "MISS, MISS", "X-Cache-Hits", "0, 0", "X-Timer", "S1754235737.808876,VS0,VE230",
        "alt-svc", "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 403,
    statusText: "Forbidden",
    headers: {
      connection: "keep-alive",
      "content-type": "application/json; charset=utf-8",
      "strict-transport-security": "max-age=0",
      "x-xss-protection": "1; mode=block",
      "x-content-type-options": "nosniff",
      "accept-ranges": "bytes",
      via: "1.1 varnish, 1.1 varnish",
      date: "Sun, 03 Aug 2025 15:42:17 GMT",
      "cache-control": "no-store",
      vary: "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
      "transfer-encoding": "chunked",
      "set-cookie": [ "gk_suid=84285814; max-age=31536000; secure; path=/; httponly",
        "gki=ab_test_pro_upgrade_button_round_3:false,ab_test_susi_zero_susi_sign_in:false,; max-age=31536000; path=/; secure; httponly"
      ],
      server: "adobe",
      "x-trace-id": "1dd9d51c-5675-46d9-950d-d44f84757f8e",
      "x-served-from": "Flex",
      "x-last-60s-hits": "1",
      "x-served-by": "cache-iad-kiad7000032-IAD, cache-icn1450028-ICN",
      "x-cache": "MISS, MISS",
      "x-cache-hits": "0, 0",
      "x-timer": "S1754235737.808876,VS0,VE230",
      "alt-svc": "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://api.behance.net/v2/projects",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.behance.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      valid: 0,
      http_code: "403",
      messages: [
        [Object ...]
      ],
    },
  },
  status: 403,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
🔍 Upload limit calculation for user: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
  - subscription_tier: free
  - dailyLimit: 9999
  - upload_count_today: 50
  - remainingUploads: 9949
  - canUpload: true
  - resetTime: 2025-08-04T13:37:52.939Z
  - now: 2025-08-03T16:08:45.685Z
  - should reset: false
🔍 Upload limit calculation for user: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
  - subscription_tier: free
  - dailyLimit: 9999
  - upload_count_today: 50
  - remainingUploads: 9949
  - canUpload: true
  - resetTime: 2025-08-04T13:37:52.939Z
  - now: 2025-08-03T16:09:45.968Z
  - should reset: false
🚀 Starting multi-image analysis...
📋 User ID: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
📷 Found image: image0 - free-nature-images.jpg (200951 bytes)
📷 Found image: image1 - Free-Stock-Photos-01.jpg (249462 bytes)
🖼️ Total images found: 2
🔄 Converting images to buffers...
✅ Buffer conversion complete
🎯 Starting AI analysis...
🔍 Analyzing image 1/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
📋 Cache hit for image analysis
📊 Analysis complete. Found 27 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🏛️ Searching Met Museum for: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🔍 Found 7 potential artworks
🎨 Got 3 artworks from getArtworkDetails
📊 Ranked artworks: 3
🎯 First artwork: Ia Orana Maria (Hail Mary) by Paul Gauguin
✅ Retrieved 3 Met Museum artworks
🏛️ Found 3 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 5 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 3001ms
🔍 Analyzing image 2/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
📋 Cache hit for image analysis
📊 Analysis complete. Found 26 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🏛️ Searching Met Museum for: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🔍 Found 6 potential artworks
🎨 Got 4 artworks from getArtworkDetails
📊 Ranked artworks: 4
🎯 First artwork: Processional Cross by Northern Highlands artist
✅ Retrieved 4 Met Museum artworks
🏛️ Found 4 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 5 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 129ms
📊 Found 20 common keywords
🏛️ Searching Met Museum for: nature, yellow, white, green, grass, natural landscape, grassland, plain, landscape, cloud
🔍 Found 20 potential artworks
🎨 Got 10 artworks from getArtworkDetails
📊 Ranked artworks: 10
🎯 First artwork: Landscapes, Figures, and Flowers by Chen Hongshou
✅ Retrieved 10 Met Museum artworks
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass natural landscape grassland plain 산수화 cloud",
      numOfRows: 10,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "880", "date",
        "Sun, 03 Aug 2025 16:09:50 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "880",
      date: "Sun, 03 Aug 2025 16:09:50 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&amp;numOfRows=10&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Korean Cultural API search error: 85 |         }
86 |       });
87 | 
88 |       const apiData: CulturalApiResponse = response.data;
89 | 
90 |       if (apiData.response.header.resultCode !== '0000') {
                       ^
TypeError: undefined is not an object (evaluating 'apiData.response.header')
      at searchCulturalEvents (/Users/suin2/art-recommendation-saas/backend/services/korean-cultural-api.ts:90:19)

Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass natural landscape grassland plain landscape cloud",
      ps: 10,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:09:51 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T160950Z-176b6b6df5fggf7whC1SEL439n000000080g00000000608e",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:09:51 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T160950Z-176b6b6df5fggf7whC1SEL439n000000080g00000000608e",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
met search failed: {
  status: "fulfilled",
  value: [
    {
      id: "met_44759",
      title: "Landscapes, Figures, and Flowers",
      artist: "Chen Hongshou",
      image_url: "https://images.metmuseum.org/CRDImages/as/original/1985_121_A_sf.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/as/web-large/1985_121_A_sf.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/44759",
      description: "Album of twelve leaves; ink and color on paper, dated 1618–22, from China, (Image: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm)\r\nInscription: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm))",
      keywords: [ "asian art", "album", "china", "ming dynasty (1368–1644)",
        "album of twelve leaves; ink and color on paper",
        "chinese", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437261",
      title: "The Penitence of Saint Jerome",
      artist: "Joachim Patinir",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT5549.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT5549.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437261",
      description: "Oil on wood, ca. 1515, (Shaped top: central panel, overall, with engaged frame, 46 1/4 x 32 in. (117.5 x 81.3 cm); each wing, overall, with engaged frame, 47 1/2 x 14 in. (120.7 x 35.6 cm))",
      keywords: [ "european paintings", "painting, triptych",
        "oil on wood", "netherlandish", "landscapes", "saint jerome",
        "saint john the baptist", "jesus", "baptism of christ"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438821",
      title: "Ia Orana Maria (Hail Mary)",
      artist: "Paul Gauguin",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1025.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1025.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438821",
      description: "Oil on canvas, 1891, (44 3/4 x 34 1/2 in. (113.7 x 87.6 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "women", "landscapes", "angels", "virgin mary", "jesus"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437010",
      title: "The Arrival in Bethlehem",
      artist: "Master of the Brussels Calling of Saint Matthew",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-20399-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-20399-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437010",
      description: "Oil on wood, ca. 1540–50, (26 1/2 x 36 7/8 in. (67.3 x 93.7 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "rivers", "landscapes", "saint joseph", "virgin mary",
        "jesus", "nativity"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436535",
      title: "Wheat Field with Cypresses",
      artist: "Vincent van Gogh",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1567.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1567.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436535",
      description: "Oil on canvas, 1889, (28 13/16 × 36 3/4 in. (73.2 × 93.4 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "dutch", "landscapes", "cypresses", "summer"
      ],
      metadata: [Object ...],
    }, {
      id: "met_435809",
      title: "The Harvesters",
      artist: "Pieter Bruegel the Elder",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP119115.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP119115.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/435809",
      description: "Oil on wood, 1565, (Overall, including added strips at top, bottom, and right, 46 7/8 x 63 3/4 in. (119 x 162 cm); original painted surface 45 7/8 x 62 7/8 in. (116.5 x 159.5 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "food", "men", "women", "landscapes", "working", "eating"
      ],
      metadata: [Object ...],
    }, {
      id: "met_895898",
      title: "View on the South Downs",
      artist: "John Martin",
      image_url: "https://images.metmuseum.org/CRDImages/dp/original/DP-28061-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/dp/web-large/DP-28061-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/895898",
      description: "Watercolor with reductive techniques, 1840–49, (Sheet: 9 1/2 in. × 13 in. (24.1 × 33 cm))",
      keywords: [ "drawings and prints", "drawing", "watercolor with reductive techniques",
        "british", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436101",
      title: "The Rest on the Flight into Egypt",
      artist: "Gerard David",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-14936-023.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-14936-023.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436101",
      description: "Oil on wood, ca. 1512–15, (21 in. × 15 11/16 in. (53.3 × 39.8 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "madonna and child", "virgin mary",
        "jesus", "nursing"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438816",
      title: "The Forest in Winter at Sunset",
      artist: "Théodore Rousseau",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-31520-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-31520-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438816",
      description: "Oil on canvas, ca. 1846–67, (64 x 102 3/8 in. (162.6 x 260 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "forests", "winter", "evening"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436282",
      title: "The Crucifixion; The Last Judgment",
      artist: "Jan van Eyck",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/LC-33_92ab-Primary_Temp.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/LC-33_92ab-Primary_Temp.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436282",
      description: "Oil on canvas, transferred from wood, ca. 1436–38, (Each 22 1/4 x 7 2/3 in. (56.5 x 19.7 cm))",
      keywords: [
        "european paintings", "painting, diptych",
        "oil on canvas, transferred from wood",
        "netherlandish", "skeletons", "men", "angels", "christ", "mary magdalene",
        "virgin mary", "crucifixion", "last judgement"
      ],
      metadata: [Object ...],
    }
  ],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
korean-cultural search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "undefined is not an object (evaluating 'apiData.response.header')",
  },
}
🎯 Calculating similarity for 20 artworks
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 nature - 섬유미술 프로젝트: 100% similarity
📊 nature - 금속공예 프로젝트: 100% similarity
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 The Beach of Les Grands Sables at Le Pouldu: 47% similarity
📊 Foliage—Oak Tree and Fruit Seller: 43% similarity
📊 The Marsh: 44% similarity
📊 Landscape: 47% similarity
📊 Haymaking at Éragny: 41% similarity
📊 Springtime: 46% similarity
📊 Pasture in Normandy: 44% similarity
📊 A Sunday on La Grande Jatte — 1884: 37% similarity
📊 Stacks of Wheat (End of Summer): 38% similarity
📊 The Starry Night: 55% similarity
Failed to save analysis results: {}
📊 Analysis result: SUCCESS
🌍 Searching expanded art sources...
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass",
      numOfRows: 5,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "811", "date",
        "Sun, 03 Aug 2025 16:09:51 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "811",
      date: "Sun, 03 Aug 2025 16:09:51 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass&amp;numOfRows=5&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass",
      ps: 5,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:09:52 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T160951Z-176b6b6df5fggf7whC1SEL439n000000080g0000000060a8",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:09:52 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T160951Z-176b6b6df5fggf7whC1SEL439n000000080g0000000060a8",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
📍 Art Institute of Chicago: Found 5 artworks
📍 Rijksmuseum: Found 0 artworks
📍 국립중앙박물관: Found 0 artworks
Failed to authenticate with Artsy API: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "User-Agent": "axios/1.11.0",
      "Content-Length": "89",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    method: "post",
    url: "https://api.artsy.net/api/tokens/xapp_token",
    data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
    allowAbsoluteUrls: true,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.artsy.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "POST",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/tokens/xapp_token",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "content-type": "application/json",
      "user-agent": "axios/1.11.0",
      "content-length": "89",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/tokens/xapp_token",
      method: "POST",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.artsy.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/tokens/xapp_token",
      _defaultAgent: [Object ...],
      host: "api.artsy.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 89,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.artsy.net/api/tokens/xapp_token",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(bodyChunks)]: [
      <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
    ],
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.artsy.net/api/tokens/xapp_token",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/tokens/xapp_token",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:09:52 GMT", "content-type", "application/json", "transfer-encoding",
        "chunked", "connection", "keep-alive", "vary", "Accept-Encoding, Accept-Encoding, Origin",
        "content-encoding", "gzip", "cache-control", "no-cache", "strict-transport-security",
        "max-age=15724800; includeSubDomains", "content-security-policy", "frame-ancestors https://*.artsy.net;",
        "x-frame-options", "SAMEORIGIN", "access-control-allow-methods", "GET, OPTIONS", "access-control-allow-headers",
        "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
        "access-control-expose-headers", "X-Total-Count", "CF-RAY", "969714f5e89a3c03-NRT",
        "x-request-id", "81511b647d0c2e470c5bfcfe2944feb5", "x-runtime", "0.009316", "cf-cache-status",
        "DYNAMIC", "Server", "cloudflare"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.artsy.net/api/tokens/xapp_token",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:09:52 GMT",
      "content-type": "application/json",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      vary: "Accept-Encoding, Accept-Encoding, Origin",
      "cache-control": "no-cache",
      "strict-transport-security": "max-age=15724800; includeSubDomains",
      "content-security-policy": "frame-ancestors https://*.artsy.net;",
      "x-frame-options": "SAMEORIGIN",
      "access-control-allow-methods": "GET, OPTIONS",
      "access-control-allow-headers": "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
      "access-control-expose-headers": "X-Total-Count",
      "cf-ray": "969714f5e89a3c03-NRT",
      "x-request-id": "81511b647d0c2e470c5bfcfe2944feb5",
      "x-runtime": "0.009316",
      "cf-cache-status": "DYNAMIC",
      server: "cloudflare",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      method: "post",
      url: "https://api.artsy.net/api/tokens/xapp_token",
      data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
      allowAbsoluteUrls: true,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.artsy.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "POST",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/tokens/xapp_token",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(bodyChunks)]: [
        <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
      ],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      type: "other_error",
      message: "Unauthorized",
    },
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Artsy API not available - returning empty results
Behance search failed: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 403",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      q: "nature yellow white green grass",
      client_id: "your-behance-api-key",
      field: "fine arts,illustration,digital art",
      sort: "appreciations",
      per_page: 5,
    },
    method: "get",
    url: "https://api.behance.net/v2/projects",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.behance.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.behance.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/v2/projects",
      search: "?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _defaultAgent: [Object ...],
      host: "api.behance.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
        status: 403,
        statusText: "Forbidden",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Forbidden",
      [Symbol(statusCode)]: 403,
      url: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      headers: [Object ...],
      rawHeaders: [
        "connection", "keep-alive", "content-type", "application/json; charset=utf-8", "strict-transport-security",
        "max-age=0", "x-xss-protection", "1; mode=block", "x-content-type-options", "nosniff",
        "content-encoding", "gzip", "accept-ranges", "bytes", "via", "1.1 varnish, 1.1 varnish",
        "date", "Sun, 03 Aug 2025 16:09:53 GMT", "cache-control", "no-store", "vary", "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
        "transfer-encoding", "chunked", "set-cookie", "gk_suid=22781601; max-age=31536000; secure; path=/; httponly",
        "set-cookie", "gki=ab_test_pro_upgrade_button_round_3:false,ab_test_susi_zero_susi_sign_in:false,; max-age=31536000; path=/; secure; httponly",
        "server", "adobe", "x-trace-id", "60abc706-3ced-4fb6-9472-c46a3f6a3730", "x-served-from",
        "Flex", "X-Last-60s-Hits", "1", "X-Served-By", "cache-iad-kcgs7200106-IAD, cache-icn1450069-ICN",
        "X-Cache", "MISS, MISS", "X-Cache-Hits", "0, 0", "X-Timer", "S1754237393.947227,VS0,VE228",
        "alt-svc", "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 403,
    statusText: "Forbidden",
    headers: {
      connection: "keep-alive",
      "content-type": "application/json; charset=utf-8",
      "strict-transport-security": "max-age=0",
      "x-xss-protection": "1; mode=block",
      "x-content-type-options": "nosniff",
      "accept-ranges": "bytes",
      via: "1.1 varnish, 1.1 varnish",
      date: "Sun, 03 Aug 2025 16:09:53 GMT",
      "cache-control": "no-store",
      vary: "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
      "transfer-encoding": "chunked",
      "set-cookie": [ "gk_suid=22781601; max-age=31536000; secure; path=/; httponly",
        "gki=ab_test_pro_upgrade_button_round_3:false,ab_test_susi_zero_susi_sign_in:false,; max-age=31536000; path=/; secure; httponly"
      ],
      server: "adobe",
      "x-trace-id": "60abc706-3ced-4fb6-9472-c46a3f6a3730",
      "x-served-from": "Flex",
      "x-last-60s-hits": "1",
      "x-served-by": "cache-iad-kcgs7200106-IAD, cache-icn1450069-ICN",
      "x-cache": "MISS, MISS",
      "x-cache-hits": "0, 0",
      "x-timer": "S1754237393.947227,VS0,VE228",
      "alt-svc": "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://api.behance.net/v2/projects",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.behance.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      valid: 0,
      http_code: "403",
      messages: [
        [Object ...]
      ],
    },
  },
  status: 403,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
🔍 Upload limit calculation for user: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
  - subscription_tier: free
  - dailyLimit: 9999
  - upload_count_today: 50
  - remainingUploads: 9949
  - canUpload: true
  - resetTime: 2025-08-04T13:37:52.939Z
  - now: 2025-08-03T16:17:45.643Z
  - should reset: false
🚀 Starting multi-image analysis...
📋 User ID: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
📷 Found image: image0 - free-nature-images.jpg (200951 bytes)
📷 Found image: image1 - Free-Stock-Photos-01.jpg (249462 bytes)
🖼️ Total images found: 2
🔄 Converting images to buffers...
✅ Buffer conversion complete
🎯 Starting AI analysis...
🔍 Analyzing image 1/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
🔄 Running 5 services in parallel: google_vision, replicate, clarifai, local_clip, style_transfer
🔍 Image analysis completed in 3175ms
📈 Confidence boosted to 0.875
💾 Cached analysis result (2/500)
🚀 Optimized analysis completed in 3176ms
📊 Analysis complete. Found 27 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🏛️ Searching Met Museum for: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🔍 Found 7 potential artworks
🎨 Got 3 artworks from getArtworkDetails
📊 Ranked artworks: 3
🎯 First artwork: Ia Orana Maria (Hail Mary) by Paul Gauguin
✅ Retrieved 3 Met Museum artworks
🏛️ Found 3 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 5 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 4850ms
🔍 Analyzing image 2/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
🔄 Running 5 services in parallel: google_vision, replicate, clarifai, local_clip, style_transfer
🔍 Image analysis completed in 1909ms
📈 Confidence boosted to 0.875
💾 Cached analysis result (2/500)
🚀 Optimized analysis completed in 1909ms
📊 Analysis complete. Found 26 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🏛️ Searching Met Museum for: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🔍 Found 6 potential artworks
🎨 Got 4 artworks from getArtworkDetails
📊 Ranked artworks: 4
🎯 First artwork: Processional Cross by Northern Highlands artist
✅ Retrieved 4 Met Museum artworks
🏛️ Found 4 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 5 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 3415ms
📊 Found 20 common keywords
🏛️ Searching Met Museum for: nature, yellow, white, green, grass, natural landscape, grassland, plain, landscape, cloud
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass natural landscape grassland plain 산수화 cloud",
      numOfRows: 10,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "880", "date",
        "Sun, 03 Aug 2025 16:18:02 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "880",
      date: "Sun, 03 Aug 2025 16:18:02 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&amp;numOfRows=10&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Korean Cultural API search error: 85 |         }
86 |       });
87 | 
88 |       const apiData: CulturalApiResponse = response.data;
89 | 
90 |       if (apiData.response.header.resultCode !== '0000') {
                       ^
TypeError: undefined is not an object (evaluating 'apiData.response.header')
      at searchCulturalEvents (/Users/suin2/art-recommendation-saas/backend/services/korean-cultural-api.ts:90:19)

🔍 Found 20 potential artworks
Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass natural landscape grassland plain landscape cloud",
      ps: 10,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:18:04 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T161803Z-176b6b6df5fnlblqhC1SELsw3000000007x0000000008mhm",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:18:04 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T161803Z-176b6b6df5fnlblqhC1SELsw3000000007x0000000008mhm",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
🎨 Got 10 artworks from getArtworkDetails
📊 Ranked artworks: 10
🎯 First artwork: Landscapes, Figures, and Flowers by Chen Hongshou
✅ Retrieved 10 Met Museum artworks
met search failed: {
  status: "fulfilled",
  value: [
    {
      id: "met_44759",
      title: "Landscapes, Figures, and Flowers",
      artist: "Chen Hongshou",
      image_url: "https://images.metmuseum.org/CRDImages/as/original/1985_121_A_sf.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/as/web-large/1985_121_A_sf.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/44759",
      description: "Album of twelve leaves; ink and color on paper, dated 1618–22, from China, (Image: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm)\r\nInscription: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm))",
      keywords: [ "asian art", "album", "china", "ming dynasty (1368–1644)",
        "album of twelve leaves; ink and color on paper",
        "chinese", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437261",
      title: "The Penitence of Saint Jerome",
      artist: "Joachim Patinir",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT5549.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT5549.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437261",
      description: "Oil on wood, ca. 1515, (Shaped top: central panel, overall, with engaged frame, 46 1/4 x 32 in. (117.5 x 81.3 cm); each wing, overall, with engaged frame, 47 1/2 x 14 in. (120.7 x 35.6 cm))",
      keywords: [ "european paintings", "painting, triptych",
        "oil on wood", "netherlandish", "landscapes", "saint jerome",
        "saint john the baptist", "jesus", "baptism of christ"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438821",
      title: "Ia Orana Maria (Hail Mary)",
      artist: "Paul Gauguin",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1025.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1025.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438821",
      description: "Oil on canvas, 1891, (44 3/4 x 34 1/2 in. (113.7 x 87.6 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "women", "landscapes", "angels", "virgin mary", "jesus"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437010",
      title: "The Arrival in Bethlehem",
      artist: "Master of the Brussels Calling of Saint Matthew",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-20399-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-20399-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437010",
      description: "Oil on wood, ca. 1540–50, (26 1/2 x 36 7/8 in. (67.3 x 93.7 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "rivers", "landscapes", "saint joseph", "virgin mary",
        "jesus", "nativity"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436535",
      title: "Wheat Field with Cypresses",
      artist: "Vincent van Gogh",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1567.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1567.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436535",
      description: "Oil on canvas, 1889, (28 13/16 × 36 3/4 in. (73.2 × 93.4 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "dutch", "landscapes", "cypresses", "summer"
      ],
      metadata: [Object ...],
    }, {
      id: "met_435809",
      title: "The Harvesters",
      artist: "Pieter Bruegel the Elder",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP119115.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP119115.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/435809",
      description: "Oil on wood, 1565, (Overall, including added strips at top, bottom, and right, 46 7/8 x 63 3/4 in. (119 x 162 cm); original painted surface 45 7/8 x 62 7/8 in. (116.5 x 159.5 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "food", "men", "women", "landscapes", "working", "eating"
      ],
      metadata: [Object ...],
    }, {
      id: "met_895898",
      title: "View on the South Downs",
      artist: "John Martin",
      image_url: "https://images.metmuseum.org/CRDImages/dp/original/DP-28061-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/dp/web-large/DP-28061-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/895898",
      description: "Watercolor with reductive techniques, 1840–49, (Sheet: 9 1/2 in. × 13 in. (24.1 × 33 cm))",
      keywords: [ "drawings and prints", "drawing", "watercolor with reductive techniques",
        "british", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436101",
      title: "The Rest on the Flight into Egypt",
      artist: "Gerard David",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-14936-023.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-14936-023.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436101",
      description: "Oil on wood, ca. 1512–15, (21 in. × 15 11/16 in. (53.3 × 39.8 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "madonna and child", "virgin mary",
        "jesus", "nursing"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438816",
      title: "The Forest in Winter at Sunset",
      artist: "Théodore Rousseau",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-31520-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-31520-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438816",
      description: "Oil on canvas, ca. 1846–67, (64 x 102 3/8 in. (162.6 x 260 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "forests", "winter", "evening"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436282",
      title: "The Crucifixion; The Last Judgment",
      artist: "Jan van Eyck",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/LC-33_92ab-Primary_Temp.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/LC-33_92ab-Primary_Temp.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436282",
      description: "Oil on canvas, transferred from wood, ca. 1436–38, (Each 22 1/4 x 7 2/3 in. (56.5 x 19.7 cm))",
      keywords: [
        "european paintings", "painting, diptych",
        "oil on canvas, transferred from wood",
        "netherlandish", "skeletons", "men", "angels", "christ", "mary magdalene",
        "virgin mary", "crucifixion", "last judgement"
      ],
      metadata: [Object ...],
    }
  ],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
korean-cultural search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "undefined is not an object (evaluating 'apiData.response.header')",
  },
}
🎯 Calculating similarity for 20 artworks
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 nature - 섬유미술 프로젝트: 100% similarity
📊 nature - 금속공예 프로젝트: 100% similarity
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 The Beach of Les Grands Sables at Le Pouldu: 47% similarity
📊 Foliage—Oak Tree and Fruit Seller: 43% similarity
📊 The Marsh: 44% similarity
📊 Landscape: 47% similarity
📊 Haymaking at Éragny: 41% similarity
📊 Springtime: 46% similarity
📊 Pasture in Normandy: 44% similarity
📊 A Sunday on La Grande Jatte — 1884: 37% similarity
📊 Stacks of Wheat (End of Summer): 38% similarity
📊 The Starry Night: 55% similarity
Failed to save analysis results: {}
📊 Analysis result: SUCCESS
🌍 Searching expanded art sources...
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass",
      numOfRows: 5,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "811", "date",
        "Sun, 03 Aug 2025 16:18:07 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "811",
      date: "Sun, 03 Aug 2025 16:18:07 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass&amp;numOfRows=5&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass",
      ps: 5,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:18:07 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T161807Z-176b6b6df5fnlblqhC1SELsw3000000007x0000000008mqu",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:18:07 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T161807Z-176b6b6df5fnlblqhC1SELsw3000000007x0000000008mqu",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
📍 Art Institute of Chicago: Found 5 artworks
📍 Rijksmuseum: Found 0 artworks
📍 국립중앙박물관: Found 0 artworks
Failed to authenticate with Artsy API: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "User-Agent": "axios/1.11.0",
      "Content-Length": "89",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    method: "post",
    url: "https://api.artsy.net/api/tokens/xapp_token",
    data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
    allowAbsoluteUrls: true,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.artsy.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "POST",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/tokens/xapp_token",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "content-type": "application/json",
      "user-agent": "axios/1.11.0",
      "content-length": "89",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/tokens/xapp_token",
      method: "POST",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.artsy.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/tokens/xapp_token",
      _defaultAgent: [Object ...],
      host: "api.artsy.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 89,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.artsy.net/api/tokens/xapp_token",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(bodyChunks)]: [
      <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
    ],
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.artsy.net/api/tokens/xapp_token",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/tokens/xapp_token",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:18:08 GMT", "content-type", "application/json", "transfer-encoding",
        "chunked", "connection", "keep-alive", "vary", "Accept-Encoding, Accept-Encoding, Origin",
        "content-encoding", "gzip", "cache-control", "no-cache", "strict-transport-security",
        "max-age=15724800; includeSubDomains", "content-security-policy", "frame-ancestors https://*.artsy.net;",
        "x-frame-options", "SAMEORIGIN", "access-control-allow-methods", "GET, OPTIONS", "access-control-allow-headers",
        "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
        "access-control-expose-headers", "X-Total-Count", "CF-RAY", "9697210e3b6680d2-NRT",
        "x-request-id", "d4a865522301899d204e629b3951daeb", "x-runtime", "0.004714", "cf-cache-status",
        "DYNAMIC", "Server", "cloudflare"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.artsy.net/api/tokens/xapp_token",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:18:08 GMT",
      "content-type": "application/json",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      vary: "Accept-Encoding, Accept-Encoding, Origin",
      "cache-control": "no-cache",
      "strict-transport-security": "max-age=15724800; includeSubDomains",
      "content-security-policy": "frame-ancestors https://*.artsy.net;",
      "x-frame-options": "SAMEORIGIN",
      "access-control-allow-methods": "GET, OPTIONS",
      "access-control-allow-headers": "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
      "access-control-expose-headers": "X-Total-Count",
      "cf-ray": "9697210e3b6680d2-NRT",
      "x-request-id": "d4a865522301899d204e629b3951daeb",
      "x-runtime": "0.004714",
      "cf-cache-status": "DYNAMIC",
      server: "cloudflare",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      method: "post",
      url: "https://api.artsy.net/api/tokens/xapp_token",
      data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
      allowAbsoluteUrls: true,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.artsy.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "POST",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/tokens/xapp_token",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(bodyChunks)]: [
        <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
      ],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      type: "other_error",
      message: "Unauthorized",
    },
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Artsy API not available - returning empty results
Behance search failed: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 403",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      q: "nature yellow white green grass",
      client_id: "your-behance-api-key",
      field: "fine arts,illustration,digital art",
      sort: "appreciations",
      per_page: 5,
    },
    method: "get",
    url: "https://api.behance.net/v2/projects",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.behance.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.behance.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/v2/projects",
      search: "?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _defaultAgent: [Object ...],
      host: "api.behance.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
        status: 403,
        statusText: "Forbidden",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Forbidden",
      [Symbol(statusCode)]: 403,
      url: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      headers: [Object ...],
      rawHeaders: [
        "connection", "keep-alive", "content-type", "application/json; charset=utf-8", "strict-transport-security",
        "max-age=0", "x-xss-protection", "1; mode=block", "x-content-type-options", "nosniff",
        "content-encoding", "gzip", "accept-ranges", "bytes", "via", "1.1 varnish, 1.1 varnish",
        "date", "Sun, 03 Aug 2025 16:18:08 GMT", "cache-control", "no-store", "vary", "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
        "transfer-encoding", "chunked", "set-cookie", "gk_suid=82395042; max-age=31536000; secure; path=/; httponly",
        "set-cookie", "gki=ab_test_pro_upgrade_button_round_3:false,; max-age=31536000; path=/; secure; httponly",
        "server", "adobe", "x-trace-id", "201cbc89-a3e0-485f-a872-9ff5aba37d09", "x-served-from",
        "Flex", "X-Last-60s-Hits", "1", "X-Served-By", "cache-iad-kcgs7200052-IAD, cache-icn1450091-ICN",
        "X-Cache", "MISS, MISS", "X-Cache-Hits", "0, 0", "X-Timer", "S1754237888.313208,VS0,VE221",
        "alt-svc", "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 403,
    statusText: "Forbidden",
    headers: {
      connection: "keep-alive",
      "content-type": "application/json; charset=utf-8",
      "strict-transport-security": "max-age=0",
      "x-xss-protection": "1; mode=block",
      "x-content-type-options": "nosniff",
      "accept-ranges": "bytes",
      via: "1.1 varnish, 1.1 varnish",
      date: "Sun, 03 Aug 2025 16:18:08 GMT",
      "cache-control": "no-store",
      vary: "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
      "transfer-encoding": "chunked",
      "set-cookie": [ "gk_suid=82395042; max-age=31536000; secure; path=/; httponly",
        "gki=ab_test_pro_upgrade_button_round_3:false,; max-age=31536000; path=/; secure; httponly"
      ],
      server: "adobe",
      "x-trace-id": "201cbc89-a3e0-485f-a872-9ff5aba37d09",
      "x-served-from": "Flex",
      "x-last-60s-hits": "1",
      "x-served-by": "cache-iad-kcgs7200052-IAD, cache-icn1450091-ICN",
      "x-cache": "MISS, MISS",
      "x-cache-hits": "0, 0",
      "x-timer": "S1754237888.313208,VS0,VE221",
      "alt-svc": "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://api.behance.net/v2/projects",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.behance.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      valid: 0,
      http_code: "403",
      messages: [
        [Object ...]
      ],
    },
  },
  status: 403,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
🔍 Upload limit calculation for user: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
  - subscription_tier: free
  - dailyLimit: 9999
  - upload_count_today: 50
  - remainingUploads: 9949
  - canUpload: true
  - resetTime: 2025-08-04T13:37:52.939Z
  - now: 2025-08-03T16:24:05.839Z
  - should reset: false
🚀 Starting multi-image analysis...
📋 User ID: d70e8bf6-d63a-454c-8c1b-335cfbde2c26
📷 Found image: image0 - free-nature-images.jpg (200951 bytes)
📷 Found image: image1 - Free-Stock-Photos-01.jpg (249462 bytes)
🖼️ Total images found: 2
🔄 Converting images to buffers...
✅ Buffer conversion complete
🎯 Starting AI analysis...
🔍 Analyzing image 1/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
📋 Cache hit for image analysis
📊 Analysis complete. Found 27 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🏛️ Searching Met Museum for: green, grass, nature, natural landscape, grassland, plain, landscape, cloud, field, meadow, yellow, golf, countryside, sky, rural, soil, sun, country, tree, summer, pasture, lawn, fair weather, farmland, cloudy, hayfield, white
🔍 Found 7 potential artworks
🎨 Got 3 artworks from getArtworkDetails
📊 Ranked artworks: 3
🎯 First artwork: Ia Orana Maria (Hail Mary) by Paul Gauguin
✅ Retrieved 3 Met Museum artworks
🏛️ Found 3 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 5 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 153ms
🔍 Analyzing image 2/2
🔍 Starting optimized image analysis...
🔧 AI Ensemble status: initialized
🔧 Performance Optimizer status: initialized
📋 Cache hit for image analysis
📊 Analysis complete. Found 26 keywords
🎯 Style: mixed, Confidence: 0.875
🔍 Using keyword-based search fallback...
🔍 Searching for artworks with keywords: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🏛️ Searching Met Museum for: rock, reflection, balance, pebble, zen, sculpture, yellow, water, lake, harmony, meditation, nature, river, outdoors, no person, peace, composure, pool, stability, boulder, fall, relaxation, park, gray, black, white
🔍 Found 6 potential artworks
🎨 Got 4 artworks from getArtworkDetails
📊 Ranked artworks: 4
🎯 First artwork: Processional Cross by Northern Highlands artist
✅ Retrieved 4 Met Museum artworks
🏛️ Found 4 Met Museum artworks
📚 Found 2 local artworks
✅ Returning 5 total recommendations
Failed to store user upload: {
  code: "PGRST204",
  details: null,
  hint: null,
  message: "Could not find the 'analysis_embeddings' column of 'user_uploads' in the schema cache",
}
✅ Analysis and recommendation complete in 127ms
📊 Found 20 common keywords
🏛️ Searching Met Museum for: nature, yellow, white, green, grass, natural landscape, grassland, plain, landscape, cloud
🔍 Found 20 potential artworks
🎨 Got 10 artworks from getArtworkDetails
📊 Ranked artworks: 10
🎯 First artwork: Landscapes, Figures, and Flowers by Chen Hongshou
✅ Retrieved 10 Met Museum artworks
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass natural landscape grassland plain 산수화 cloud",
      numOfRows: 10,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "880", "date",
        "Sun, 03 Aug 2025 16:24:12 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "880",
      date: "Sun, 03 Aug 2025 16:24:12 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&numOfRows=10&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass+natural+landscape+grassland+plain+%EC%82%B0%EC%88%98%ED%99%94+cloud&amp;numOfRows=10&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Korean Cultural API search error: 85 |         }
86 |       });
87 | 
88 |       const apiData: CulturalApiResponse = response.data;
89 | 
90 |       if (apiData.response.header.resultCode !== '0000') {
                       ^
TypeError: undefined is not an object (evaluating 'apiData.response.header')
      at searchCulturalEvents (/Users/suin2/art-recommendation-saas/backend/services/korean-cultural-api.ts:90:19)

Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass natural landscape grassland plain landscape cloud",
      ps: 10,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:24:13 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T162412Z-176b6b6df5fw5dr4hC1SELmr0w00000004zg00000000fhns",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:24:13 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T162412Z-176b6b6df5fw5dr4hC1SELmr0w00000004zg00000000fhns",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass+natural+landscape+grassland+plain+landscape+cloud&ps=10&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
met search failed: {
  status: "fulfilled",
  value: [
    {
      id: "met_44759",
      title: "Landscapes, Figures, and Flowers",
      artist: "Chen Hongshou",
      image_url: "https://images.metmuseum.org/CRDImages/as/original/1985_121_A_sf.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/as/web-large/1985_121_A_sf.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/44759",
      description: "Album of twelve leaves; ink and color on paper, dated 1618–22, from China, (Image: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm)\r\nInscription: 8 3/4 × 3 5/8 in. (22.2 × 9.2 cm))",
      keywords: [ "asian art", "album", "china", "ming dynasty (1368–1644)",
        "album of twelve leaves; ink and color on paper",
        "chinese", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437261",
      title: "The Penitence of Saint Jerome",
      artist: "Joachim Patinir",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT5549.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT5549.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437261",
      description: "Oil on wood, ca. 1515, (Shaped top: central panel, overall, with engaged frame, 46 1/4 x 32 in. (117.5 x 81.3 cm); each wing, overall, with engaged frame, 47 1/2 x 14 in. (120.7 x 35.6 cm))",
      keywords: [ "european paintings", "painting, triptych",
        "oil on wood", "netherlandish", "landscapes", "saint jerome",
        "saint john the baptist", "jesus", "baptism of christ"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438821",
      title: "Ia Orana Maria (Hail Mary)",
      artist: "Paul Gauguin",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1025.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1025.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438821",
      description: "Oil on canvas, 1891, (44 3/4 x 34 1/2 in. (113.7 x 87.6 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "women", "landscapes", "angels", "virgin mary", "jesus"
      ],
      metadata: [Object ...],
    }, {
      id: "met_437010",
      title: "The Arrival in Bethlehem",
      artist: "Master of the Brussels Calling of Saint Matthew",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-20399-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-20399-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/437010",
      description: "Oil on wood, ca. 1540–50, (26 1/2 x 36 7/8 in. (67.3 x 93.7 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "rivers", "landscapes", "saint joseph", "virgin mary",
        "jesus", "nativity"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436535",
      title: "Wheat Field with Cypresses",
      artist: "Vincent van Gogh",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DT1567.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DT1567.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436535",
      description: "Oil on canvas, 1889, (28 13/16 × 36 3/4 in. (73.2 × 93.4 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "dutch", "landscapes", "cypresses", "summer"
      ],
      metadata: [Object ...],
    }, {
      id: "met_435809",
      title: "The Harvesters",
      artist: "Pieter Bruegel the Elder",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP119115.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP119115.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/435809",
      description: "Oil on wood, 1565, (Overall, including added strips at top, bottom, and right, 46 7/8 x 63 3/4 in. (119 x 162 cm); original painted surface 45 7/8 x 62 7/8 in. (116.5 x 159.5 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "food", "men", "women", "landscapes", "working", "eating"
      ],
      metadata: [Object ...],
    }, {
      id: "met_895898",
      title: "View on the South Downs",
      artist: "John Martin",
      image_url: "https://images.metmuseum.org/CRDImages/dp/original/DP-28061-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/dp/web-large/DP-28061-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/895898",
      description: "Watercolor with reductive techniques, 1840–49, (Sheet: 9 1/2 in. × 13 in. (24.1 × 33 cm))",
      keywords: [ "drawings and prints", "drawing", "watercolor with reductive techniques",
        "british", "landscapes"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436101",
      title: "The Rest on the Flight into Egypt",
      artist: "Gerard David",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-14936-023.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-14936-023.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436101",
      description: "Oil on wood, ca. 1512–15, (21 in. × 15 11/16 in. (53.3 × 39.8 cm))",
      keywords: [ "european paintings", "painting", "oil on wood",
        "netherlandish", "madonna and child", "virgin mary",
        "jesus", "nursing"
      ],
      metadata: [Object ...],
    }, {
      id: "met_438816",
      title: "The Forest in Winter at Sunset",
      artist: "Théodore Rousseau",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/DP-31520-001.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/DP-31520-001.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/438816",
      description: "Oil on canvas, ca. 1846–67, (64 x 102 3/8 in. (162.6 x 260 cm))",
      keywords: [ "european paintings", "painting", "oil on canvas",
        "french", "forests", "winter", "evening"
      ],
      metadata: [Object ...],
    }, {
      id: "met_436282",
      title: "The Crucifixion; The Last Judgment",
      artist: "Jan van Eyck",
      image_url: "https://images.metmuseum.org/CRDImages/ep/original/LC-33_92ab-Primary_Temp.jpg",
      thumbnail_url: "https://images.metmuseum.org/CRDImages/ep/web-large/LC-33_92ab-Primary_Temp.jpg",
      source: "Met Museum",
      source_url: "https://www.metmuseum.org/art/collection/search/436282",
      description: "Oil on canvas, transferred from wood, ca. 1436–38, (Each 22 1/4 x 7 2/3 in. (56.5 x 19.7 cm))",
      keywords: [
        "european paintings", "painting, diptych",
        "oil on canvas, transferred from wood",
        "netherlandish", "skeletons", "men", "angels", "christ", "mary magdalene",
        "virgin mary", "crucifixion", "last judgement"
      ],
      metadata: [Object ...],
    }
  ],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
korean-cultural search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "undefined is not an object (evaluating 'apiData.response.header')",
  },
}
🎯 Calculating similarity for 20 artworks
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 nature - 섬유미술 프로젝트: 100% similarity
📊 nature - 금속공예 프로젝트: 100% similarity
📊 nature - 시각디자인 프로젝트: 100% similarity
📊 nature - 산업디자인 프로젝트: 100% similarity
📊 nature - 회화 프로젝트: 100% similarity
📊 nature - 조소 프로젝트: 100% similarity
📊 The Beach of Les Grands Sables at Le Pouldu: 47% similarity
📊 Foliage—Oak Tree and Fruit Seller: 43% similarity
📊 The Marsh: 44% similarity
📊 Landscape: 47% similarity
📊 Haymaking at Éragny: 41% similarity
📊 Springtime: 46% similarity
📊 Pasture in Normandy: 44% similarity
📊 A Sunday on La Grande Jatte — 1884: 37% similarity
📊 Stacks of Wheat (End of Summer): 38% similarity
📊 The Starry Night: 55% similarity
Failed to save analysis results: {}
📊 Analysis result: SUCCESS
🌍 Searching expanded art sources...
Korea Museum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 500",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      serviceKey: "",
      searchText: "nature yellow white green grass",
      numOfRows: 5,
      pageNo: 1,
      resultType: "json",
    },
    method: "get",
    url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 80,
      protocol: "http:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      createConnection: [Function],
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "http:",
    [Symbol(port)]: 80,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "apis.data.go.kr",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "http:",
      path: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "apis.data.go.kr",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/1192000/museum/search/v1/getMuseumSearch",
      search: "?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      host: "apis.data.go.kr",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
        status: 500,
        statusText: "Internal Server Error",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Internal Server Error",
      [Symbol(statusCode)]: 500,
      url: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      headers: [Object ...],
      rawHeaders: [ "content-type", "text/xml;charset=utf-8", "content-length", "811", "date",
        "Sun, 03 Aug 2025 16:24:13 GMT", "connection", "close", "Server", "NIA API Server"
      ],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      redirects: [],
      [Symbol(fakeSocket)]: [Object ...],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 500,
    statusText: "Internal Server Error",
    headers: {
      "content-type": "text/xml;charset=utf-8",
      "content-length": "811",
      date: "Sun, 03 Aug 2025 16:24:13 GMT",
      connection: "close",
      server: "NIA API Server",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "http:",
      [Symbol(port)]: 80,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "apis.data.go.kr",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/1192000/museum/search/v1/getMuseumSearch?serviceKey=&searchText=nature+yellow+white+green+grass&numOfRows=5&pageNo=1&resultType=json",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <soapenv:Body>\n        <soapenv:Fault>\n            <faultcode>soapenv:Server</faultcode>\n            <faultstring>Policy Falsified</faultstring>\n            <faultactor>http://apis.data.go.kr/1192000/museum/search/v1/getMuseumSearch?serviceKey=&amp;searchText=nature+yellow+white+green+grass&amp;numOfRows=5&amp;pageNo=1&amp;resultType=json</faultactor>\n            <detail>\n                <l7:policyResult\n                    status=\"Service Not Found.  The request may have been sent to an invalid URL, or intended for an unsupported operation.\" xmlns:l7=\"http://www.layer7tech.com/ws/policy/fault\"/>\n            </detail>\n        </soapenv:Fault>\n    </soapenv:Body>\n</soapenv:Envelope>\n",
  },
  status: 500,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Rijksmuseum API search error: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      key: "fakekey",
      q: "nature yellow white green grass",
      ps: 5,
      imgonly: true,
      format: "json",
      culture: "en",
    },
    method: "get",
    url: "https://www.rijksmuseum.nl/api/en/collection",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "www.rijksmuseum.nl",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "www.rijksmuseum.nl",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/en/collection",
      search: "?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _defaultAgent: [Object ...],
      host: "www.rijksmuseum.nl",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:24:13 GMT", "content-type", "application/json; charset=utf-8",
        "transfer-encoding", "chunked", "connection", "keep-alive", "strict-transport-security",
        "max-age=2592000", "X-Powered-By", "ASP.NET", "x-azure-ref", "20250803T162413Z-176b6b6df5fw5dr4hC1SELmr0w00000004zg00000000fhpu",
        "X-Cache", "CONFIG_NOCACHE"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://www.rijksmuseum.nl/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:24:13 GMT",
      "content-type": "application/json; charset=utf-8",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      "strict-transport-security": "max-age=2592000",
      "x-powered-by": "ASP.NET",
      "x-azure-ref": "20250803T162413Z-176b6b6df5fw5dr4hC1SELmr0w00000004zg00000000fhpu",
      "x-cache": "CONFIG_NOCACHE",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://www.rijksmuseum.nl/api/en/collection",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "www.rijksmuseum.nl",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/en/collection?key=fakekey&q=nature+yellow+white+green+grass&ps=5&imgonly=true&format=json&culture=en",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "Invalid key",
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
rijksmuseum search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 401",
  },
}
korea search failed: {
  status: "fulfilled",
  value: {
    success: false,
    artworks: [],
    total: 0,
    error: "Request failed with status code 500",
  },
}
📍 Art Institute of Chicago: Found 5 artworks
📍 Rijksmuseum: Found 0 artworks
📍 국립중앙박물관: Found 0 artworks
Failed to authenticate with Artsy API: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 401",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "User-Agent": "axios/1.11.0",
      "Content-Length": "89",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    method: "post",
    url: "https://api.artsy.net/api/tokens/xapp_token",
    data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
    allowAbsoluteUrls: true,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.artsy.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "POST",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/api/tokens/xapp_token",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "content-type": "application/json",
      "user-agent": "axios/1.11.0",
      "content-length": "89",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/api/tokens/xapp_token",
      method: "POST",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.artsy.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/api/tokens/xapp_token",
      _defaultAgent: [Object ...],
      host: "api.artsy.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 89,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.artsy.net/api/tokens/xapp_token",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(bodyChunks)]: [
      <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
    ],
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.artsy.net/api/tokens/xapp_token",
        status: 401,
        statusText: "Unauthorized",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Unauthorized",
      [Symbol(statusCode)]: 401,
      url: "/api/tokens/xapp_token",
      headers: [Object ...],
      rawHeaders: [
        "date", "Sun, 03 Aug 2025 16:24:14 GMT", "content-type", "application/json", "transfer-encoding",
        "chunked", "connection", "keep-alive", "vary", "Accept-Encoding, Accept-Encoding, Origin",
        "content-encoding", "gzip", "cache-control", "no-cache", "strict-transport-security",
        "max-age=15724800; includeSubDomains", "content-security-policy", "frame-ancestors https://*.artsy.net;",
        "x-frame-options", "SAMEORIGIN", "access-control-allow-methods", "GET, OPTIONS", "access-control-allow-headers",
        "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
        "access-control-expose-headers", "X-Total-Count", "CF-RAY", "969729ff1bede37a-NRT",
        "x-request-id", "8537e9d1dc3ad453b1d3d9b5d139177a", "x-runtime", "0.007775", "cf-cache-status",
        "DYNAMIC", "Server", "cloudflare"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.artsy.net/api/tokens/xapp_token",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 401,
    statusText: "Unauthorized",
    headers: {
      date: "Sun, 03 Aug 2025 16:24:14 GMT",
      "content-type": "application/json",
      "transfer-encoding": "chunked",
      connection: "keep-alive",
      vary: "Accept-Encoding, Accept-Encoding, Origin",
      "cache-control": "no-cache",
      "strict-transport-security": "max-age=15724800; includeSubDomains",
      "content-security-policy": "frame-ancestors https://*.artsy.net;",
      "x-frame-options": "SAMEORIGIN",
      "access-control-allow-methods": "GET, OPTIONS",
      "access-control-allow-headers": "Accept,X-Xapp-Token,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Request-Id",
      "access-control-expose-headers": "X-Total-Count",
      "cf-ray": "969729ff1bede37a-NRT",
      "x-request-id": "8537e9d1dc3ad453b1d3d9b5d139177a",
      "x-runtime": "0.007775",
      "cf-cache-status": "DYNAMIC",
      server: "cloudflare",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      method: "post",
      url: "https://api.artsy.net/api/tokens/xapp_token",
      data: "{\"client_id\":\"your-artsy-client-id-here\",\"client_secret\":\"your-artsy-client-secret-here\"}",
      allowAbsoluteUrls: true,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.artsy.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "POST",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/api/tokens/xapp_token",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(bodyChunks)]: [
        <Buffer 7b 22 63 6c 69 65 6e 74 5f 69 64 22 3a 22 79 6f 75 72 2d 61 72 74 73 79 2d 63 6c 69 65 6e 74 2d 69 64 2d 68 65 72 65 22 2c 22 63 6c 69 65 6e 74 5f 73 ... 39 more bytes>
      ],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      type: "other_error",
      message: "Unauthorized",
    },
  },
  status: 401,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
Artsy API not available - returning empty results
Behance search failed: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/Users/suin2/art-recommendation-saas/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 403",
  name: "AxiosError",
  code: "ERR_BAD_REQUEST",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.11.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      q: "nature yellow white green grass",
      client_id: "your-behance-api-key",
      field: "fine arts,illustration,digital art",
      sort: "appreciations",
      per_page: 5,
    },
    method: "get",
    url: "https://api.behance.net/v2/projects",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: [AbortSignal ...],
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object ...],
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: [Object ...],
      requests: [Object ...],
      sockets: [Object ...],
      freeSockets: [Object ...],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.behance.net",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.11.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      method: "GET",
      headers: [Object ...],
      agents: [Object ...],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object ...],
      hostname: "api.behance.net",
      port: "",
      agent: undefined,
      nativeProtocols: [Object ...],
      pathname: "/v2/projects",
      search: "?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _defaultAgent: [Object ...],
      host: "api.behance.net",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: [Object ...],
      _writableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: [Object ...],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: [Object ...],
      _readableState: [Object ...],
      _writableState: [Object ...],
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: [Object ...],
      _readableState: [Object ...],
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
        status: 403,
        statusText: "Forbidden",
        headers: Headers [Object ...],
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Forbidden",
      [Symbol(statusCode)]: 403,
      url: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      headers: [Object ...],
      rawHeaders: [
        "connection", "keep-alive", "content-type", "application/json; charset=utf-8", "strict-transport-security",
        "max-age=0", "x-xss-protection", "1; mode=block", "x-content-type-options", "nosniff",
        "content-encoding", "gzip", "accept-ranges", "bytes", "via", "1.1 varnish, 1.1 varnish",
        "date", "Sun, 03 Aug 2025 16:24:14 GMT", "cache-control", "no-store", "vary", "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
        "transfer-encoding", "chunked", "set-cookie", "gk_suid=56421773; max-age=31536000; secure; path=/; httponly",
        "set-cookie", "gki=ab_test_pro_upgrade_button_round_3:false,; max-age=31536000; path=/; secure; httponly",
        "server", "adobe", "x-trace-id", "04194e62-4c4b-4810-ace5-8e3b599cac08", "x-served-from",
        "Flex", "X-Last-60s-Hits", "1", "X-Served-By", "cache-iad-kjyo7100155-IAD, cache-icn1450031-ICN",
        "X-Cache", "MISS, MISS", "X-Cache-Hits", "0, 0", "X-Timer", "S1754238255.742985,VS0,VE239",
        "alt-svc", "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400"
      ],
      [Symbol(fakeSocket)]: [Object ...],
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.behance.net/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 403,
    statusText: "Forbidden",
    headers: {
      connection: "keep-alive",
      "content-type": "application/json; charset=utf-8",
      "strict-transport-security": "max-age=0",
      "x-xss-protection": "1; mode=block",
      "x-content-type-options": "nosniff",
      "accept-ranges": "bytes",
      via: "1.1 varnish, 1.1 varnish",
      date: "Sun, 03 Aug 2025 16:24:14 GMT",
      "cache-control": "no-store",
      vary: "Accept-Encoding, X-Gki, X-Recent-Items, X-Gki-Aug, Accept-Language",
      "transfer-encoding": "chunked",
      "set-cookie": [ "gk_suid=56421773; max-age=31536000; secure; path=/; httponly",
        "gki=ab_test_pro_upgrade_button_round_3:false,; max-age=31536000; path=/; secure; httponly"
      ],
      server: "adobe",
      "x-trace-id": "04194e62-4c4b-4810-ace5-8e3b599cac08",
      "x-served-from": "Flex",
      "x-last-60s-hits": "1",
      "x-served-by": "cache-iad-kjyo7100155-IAD, cache-icn1450031-ICN",
      "x-cache": "MISS, MISS",
      "x-cache-hits": "0, 0",
      "x-timer": "S1754238255.742985,VS0,VE239",
      "alt-svc": "h3=\":443\";ma=86400,h3-29=\":443\";ma=86400,h3-27=\":443\";ma=86400",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: [Object ...],
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object ...],
      validateStatus: [Function: validateStatus],
      headers: [AxiosHeaders ...],
      params: [Object ...],
      method: "get",
      url: "https://api.behance.net/v2/projects",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: [AbortController ...],
      [Symbol(agent)]: [Object ...],
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.behance.net",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/v2/projects?q=nature+yellow+white+green+grass&client_id=your-behance-api-key&field=fine+arts,illustration,digital+art&sort=appreciations&per_page=5",
      _events: [Object ...],
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers [Object ...],
      [Symbol(options)]: [Object ...],
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: [Object ...],
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: [Object ...],
      res: [Object ...],
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: {
      valid: 0,
      http_code: "403",
      messages: [
        [Object ...]
      ],
    },
  },
  status: 403,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
32 |     if (loadedModule) {
33 |       const [, loadedPackage] = loadedModule.match(/node_modules[\\/]([^\\/]+)[\\/]/);
34 |       help.push(`- Ensure the version of sharp aligns with the ${loadedPackage} package: "npm ls sharp"`);
35 |     }
36 |   }
37 |   throw new Error(help.join('\n'));
             ^
error: 
Something went wrong installing the "sharp" module

symbol 'napi_register_module_v1' not found in native module. Is this a Node API (napi) module?

Possible solutions:
- Install with verbose logging and look for errors: "npm install --ignore-scripts=false --foreground-scripts --verbose sharp"
- Install for the current darwin-arm64v8 runtime: "npm install --platform=darwin --arch=arm64v8 sharp"
- Consult the installation documentation: https://sharp.pixelplumbing.com/install
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/sharp.js:37:9)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/constructor.js:10:41)
      at <anonymous> (/Users/suin2/art-recommendation-saas/node_modules/sharp/lib/index.js:6:7)
